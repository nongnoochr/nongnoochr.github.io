{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/Layout/Layout.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","containers/Auth/Auth.module.css","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","axios-orders.js","store/actions/order.js","store/actions/auth.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","logo","props","className","classes","Logo","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","children","navigationItems","NavigationItems","isAuthenticated","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHander","setState","sideDrawerToggleHandler","prevState","this","Content","Component","connect","auth","token","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burger","console","log","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","modalClosed","style","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","spinner","Loader","withErrorHandler","WrappedComponent","axios","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","instance","create","baseURL","authSuccess","userId","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","setAuthRedirectPath","path","BurgerBuilder","purchasing","purchaseHandler","onSetAuthRedirectPath","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","sum","disabledInfo","ings","orderSummary","Spinner","onIngredientAdded","onIngredientRemoved","updatePurchaseState","burgerBuilder","totalPrice","ingName","ingredientName","get","then","data","catch","actions","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","isNumeric","country","email","isEmail","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","onOrderBurger","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","test","formElementsArray","id","config","form","onSubmit","formElement","loading","post","orderId","purchaseBurgerSuccess","purchaseBurgerFail","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","purchasedRedirect","purchased","match","component","amount","ingredientOutput","ig","display","border","padding","Order","Orders","onFetchOrders","orders","queryParams","fetchedOrders","err","Auth","password","isSignup","controlName","updatedControls","submitHandler","onAuth","switchAuthModeHandler","buildingBurger","authRedirectPath","errorMessage","authRedirect","building","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","localId","Logout","onLogout","App","onTryAutoSignup","routes","withRouter","getItem","Boolean","window","location","hostname","updateObject","oldObject","updatedProperties","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","addIngredient","action","updatedIngredient","updatedState","removeIngredient","updatedIng","updatedSt","setIngredients","fetchIngredientsFailed","reducer","purchaseInit","purchaseBurgerStart","newOrder","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","authStart","authFail","authLogout","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,YAAc,sCAAsC,SAAW,mCAAmC,OAAS,iCAAiC,OAAS,iCAAiC,KAAO,+BAA+B,OAAS,iCAAiC,MAAQ,gCAAgC,MAAQ,kC,mBCAxUD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,yBAAyB,MAAQ,0BAA0B,KAAO,2B,iBCAvID,EAAOC,QAAU,CAAC,aAAe,mCAAmC,MAAQ,4BAA4B,KAAO,2BAA2B,KAAO,6B,gBCAjJD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,qBAAqB,aAAe,4BAA4B,QAAU,yB,mBCAjID,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,YAAc,+B,kBCAhGD,EAAOC,QAAU,CAAC,eAAiB,uCAAuC,OAAS,iC,kBCAnFD,EAAOC,QAAU,CAAC,cAAgB,qCAAqC,YAAc,mCAAmC,OAAS,gC,gBCAjID,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,wBAAwB,OAAS,yB,4BCA7FD,EAAOC,QAAU,CAAC,QAAU,0B,gBCD5BD,EAAOC,QAAU,IAA0B,yC,gBCC3CD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,gBAAkB,2C,iBCApCD,EAAOC,QAAU,CAAC,aAAe,qC,gBCAjCD,EAAOC,QAAU,CAAC,SAAW,6B,gBCA7BD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,OAAS,wBAAwB,MAAQ,yB,gBCA3DD,EAAOC,QAAU,CAAC,gBAAkB,2C,gBCApCD,EAAOC,QAAU,CAAC,YAAc,mC,gBCAhCD,EAAOC,QAAU,CAAC,MAAQ,uB,gBCA1BD,EAAOC,QAAU,CAAC,KAAO,qB,6SCSVC,EANF,SAACC,GAAD,OACT,yBAAKC,UAAWC,IAAQC,MACpB,yBAAKC,IAAKC,IAAYC,IAAI,e,kCCWnBC,EAZQ,SAACP,GAAD,OACnB,wBAAIC,UAAWC,IAAQM,gBACnB,kBAAC,IAAD,CACIC,GAAIT,EAAMU,KACVC,MAAOX,EAAMW,MACbC,gBAAiBV,IAAQW,QACpBb,EAAMc,YCMRC,EAbS,SAACf,GAAD,OACpB,wBAAIC,UAAWC,IAAQc,iBACnB,kBAACR,EAAD,CAAgBE,KAAK,IAAIC,OAAK,GAA9B,kBACEX,EAAMiB,gBACF,kBAACT,EAAD,CAAgBE,KAAK,WAArB,UACA,KACHV,EAAMiB,gBAEH,kBAACT,EAAD,CAAgBE,KAAK,WAArB,UADA,kBAACF,EAAD,CAAgBE,KAAK,SAArB,kB,iBCECQ,EAVM,SAAClB,GAAD,OACjB,yBACIC,UAAWC,IAAQiB,aACnBC,QAASpB,EAAMqB,SACf,8BACA,8BACA,gCCUOC,EAbC,SAACtB,GAAD,OACZ,4BAAQC,UAAWC,IAAQqB,SACvB,kBAACJ,EAAD,CAAcE,QAASrB,EAAMwB,sBAC7B,yBAAKvB,UAAWC,IAAQC,MACpB,kBAACA,EAAD,OAGJ,yBAAKF,UAAWC,IAAQuB,aACpB,kBAACT,EAAD,CAAiBC,gBAAiBjB,EAAM0B,Y,iBCPrCC,EAJE,SAAC3B,GAAD,OACbA,EAAM4B,KAAO,yBAAK3B,UAAWC,IAAQ2B,SAAUT,QAASpB,EAAMqB,UAAkB,M,iBC6BrES,EA1BI,SAAC9B,GAEhB,IAAI+B,EAAkB,CAAC7B,IAAQ8B,WAAY9B,IAAQ+B,OAMnD,OAJIjC,EAAMkC,OACNH,EAAkB,CAAC7B,IAAQ8B,WAAY9B,IAAQiC,OAI/C,kBAAC,WAAD,KACI,kBAACN,EAAD,CAAUD,KAAM5B,EAAMkC,KAAMb,QAASrB,EAAMoC,SAC3C,yBAAKnC,UAAW8B,EAAgBM,KAAK,MACjC,yBAAKpC,UAAWC,IAAQC,MACpB,kBAACA,EAAD,OAGJ,6BACI,kBAACa,EAAD,CAAiBC,gBAAiBjB,EAAM0B,aCjBtDY,E,2MAEFC,MAAQ,CACJC,gBAAgB,G,EAGpBC,uBAAyB,WACrB,EAAKC,SAAS,CAACF,gBAAgB,K,EAGnCG,wBAA0B,WAEtB,EAAKD,UAAS,SAACE,GACX,MAAO,CAACJ,gBAAiBI,EAAUJ,oB,wEAMvC,OACI,kBAAC,WAAD,KACI,kBAACjB,EAAD,CACIG,OAAQmB,KAAK7C,MAAMiB,gBACnBO,oBAAqBqB,KAAKF,0BAC9B,kBAACX,EAAD,CACIN,OAAQmB,KAAK7C,MAAMiB,gBACnBiB,KAAMW,KAAKN,MAAMC,eACjBJ,OAAQS,KAAKJ,yBAEjB,0BAAMxC,UAAWC,IAAQ4C,SACpBD,KAAK7C,MAAMc,e,GA9BXiC,aA2CNC,eANS,SAAAT,GACpB,MAAO,CACHtB,gBAAsC,OAArBsB,EAAMU,KAAKC,SAIrBF,CAAyBV,G,iDCHzBa,E,iLAvCP,IAAKC,EAAa,KAElB,OAAQP,KAAK7C,MAAMqD,MACf,IAAM,eACFD,EAAa,yBAAKnD,UAAWC,IAAQoD,cACrC,MACJ,IAAM,YACFF,EACI,yBAAKnD,UAAWC,IAAQqD,UACpB,yBAAKtD,UAAWC,IAAQsD,SACxB,yBAAKvD,UAAWC,IAAQuD,UAGhC,MACJ,IAAM,OACFL,EAAa,yBAAKnD,UAAWC,IAAQwD,OACrC,MACJ,IAAM,SACFN,EAAa,yBAAKnD,UAAWC,IAAQyD,SACrC,MACJ,IAAM,QACFP,EAAa,yBAAKnD,UAAWC,IAAQ0D,QACrC,MACJ,IAAM,QACFR,EAAa,yBAAKnD,UAAWC,IAAQ2D,QACrC,MACJ,QACIT,EAAa,KAGrB,OAAOA,M,GAjCgBL,aCuBhBe,EAvBA,SAAE9D,GACb+D,QAAQC,IAAIhE,GACZ,IAAIiE,EAAyBC,OAAOC,KAAMnE,EAAMoE,aAC3CC,KAAK,SAAAC,GACF,OAAO,YAAIC,MAAOvE,EAAMoE,YAAYE,KAAUD,KAAK,SAAEG,EAAGC,GACpD,OAAO,kBAAC,EAAD,CAAkBC,IAAKJ,EAAQG,EAAGpB,KAAMiB,UAGtDK,QAAO,SAACC,EAAKC,GACV,OAAOD,EAAIE,OAAOD,KACnB,IAIP,OAHsC,IAAlCZ,EAAuBc,SACvBd,EAAyB,gEAGzB,yBAAKhE,UAAWC,IAAQ8E,QACpB,kBAAC,EAAD,CAAkB3B,KAAK,cACtBY,EACD,kBAAC,EAAD,CAAkBZ,KAAK,mB,qCCLpB4B,GAfM,SAACjF,GAAD,OACjB,yBAAKC,UAAWC,KAAQgF,cACpB,yBAAKjF,UAAWC,KAAQiF,OAAQnF,EAAMoF,OACtC,4BAAQnF,UAAWC,KAAQmF,KACvBjE,QAASpB,EAAMsF,QACfC,SAAUvF,EAAMuF,UAFpB,QAKA,4BAAQtF,UAAWC,KAAQsF,KACvBpE,QAASpB,EAAMyF,OADnB,UCNFC,GAAW,CACb,CAAEN,MAAO,QAAW/B,KAAM,SAC1B,CAAE+B,MAAO,QAAW/B,KAAM,SAC1B,CAAE+B,MAAO,SAAW/B,KAAM,UAC1B,CAAE+B,MAAO,OAAW/B,KAAM,SAwBfsC,GArBO,SAAC3F,GAAD,OAClB,yBAAKC,UAAWC,IAAQ0F,eACpB,6CAAkB,gCAAS5F,EAAM6F,MAAMC,QAAQ,KAC9CJ,GAASrB,KAAI,SAAA0B,GAAI,OACd,kBAACb,GAAD,CACIR,IAAKqB,EAAKX,MACVA,MAAOW,EAAKX,MACZK,MAAO,kBAAMzF,EAAMgG,gBAAgBD,EAAK1C,OACxCiC,QAAS,kBAAMtF,EAAMiG,kBAAkBF,EAAK1C,OAC5CkC,SAAUvF,EAAMuF,SAASQ,EAAK1C,WAEtC,4BACIpD,UAAWC,IAAQgG,YACnBX,UAAWvF,EAAMmG,YACjB/E,QAASpB,EAAMoG,SACVpG,EAAM0B,OAAS,YAAc,sB,oBCG/B2E,G,8LAxBWC,EAAWC,GAC7B,OAASD,EAAU1E,OAASiB,KAAK7C,MAAM4B,MAC9B0E,EAAUxF,WAAa+B,KAAK7C,MAAMc,W,+BAI3C,OACI,kBAAC,WAAD,KACI,kBAACe,EAAD,CAAUD,KAAMiB,KAAK7C,MAAM4B,KAAMP,QAASwB,KAAK7C,MAAMwG,cACrD,yBACIvG,UAAWC,KAAQmG,MACnBI,MAAO,CACHC,UAAW7D,KAAK7C,MAAM4B,KAAO,gBAAkB,qBAC/C+E,QAAS9D,KAAK7C,MAAM4B,KAAO,IAAM,MAGpCiB,KAAK7C,MAAMc,e,GAlBZiC,a,oBCSL6D,GAVA,SAAC5G,GAAD,OACX,4BACIuF,SAAUvF,EAAMuF,SAChBtF,UAAW,CAACC,KAAQ2G,OAAQ3G,KAAQF,EAAM8G,UAAUzE,KAAK,KACzDjB,QAASpB,EAAMqB,SACVrB,EAAMc,WCkCJiG,G,iLArCA,IAAD,OACAC,EAAoB9C,OAAOC,KAAKtB,KAAK7C,MAAMoE,aAC5CC,KAAI,SAAAC,GACD,OACI,wBAAII,IAAKJ,GACL,0BAAMmC,MAAO,CAACQ,cAAe,eAAgB3C,GADjD,KACiE,EAAKtE,MAAMoE,YAAYE,OAKpG,OACI,kBAAC,WAAD,KACI,0CACA,iFACA,4BACK0C,GAEL,2BAAG,gDAAsBnE,KAAK7C,MAAM6F,QACpC,oDACA,kBAACgB,GAAD,CACIC,QAAQ,SACRzF,QAASwB,KAAK7C,MAAMkH,mBAFxB,UAKA,kBAACL,GAAD,CACIC,QAAQ,UACRzF,QAASwB,KAAK7C,MAAMmH,mBAFxB,iB,GA1BWpE,a,oBCIZqE,GAJC,kBACZ,yBAAKnH,UAAWC,KAAQmH,UC+CbC,GAhDU,SAACC,EAAkBC,GACxC,kNAEIjF,MAAQ,CACJkF,MAAO,MAHf,EAyBIC,sBAAwB,WACpB,EAAKhF,SAAS,CAAC+E,MAAO,QA1B9B,oFAM2B,IAAD,OAClB5E,KAAK8E,eAAiBH,EAAMI,aAAaC,QAAQC,KAAI,SAAAC,GAEjD,OADA,EAAKrF,SAAS,CAAC+E,MAAO,OACfM,KAGXlF,KAAKmF,eAAiBR,EAAMI,aAAaK,SAASH,KAAI,SAAAI,GAAG,OAAIA,KAAK,SAAAT,GAC9D,EAAK/E,SAAS,CAAC+E,MAAOA,SAblC,6CAoBQD,EAAMI,aAAaC,QAAQM,MAAMtF,KAAK8E,gBACtCH,EAAMI,aAAaK,SAASE,MAAMtF,KAAKmF,kBArB/C,+BA8BQ,OACI,kBAAC,WAAD,KACI,kBAAC,GAAD,CACIpG,KAAMiB,KAAKN,MAAMkF,MACjBjB,YAAa3D,KAAK6E,uBAEjB7E,KAAKN,MAAMkF,MAAQ5E,KAAKN,MAAMkF,MAAMW,QAAU,MAEnD,kBAACb,EAAqB1E,KAAK7C,YAtC3C,GAAqB+C,c,oBCEVsF,GAJEb,KAAMc,OAAO,CAC1BC,QAAS,kD,6kBCAN,ICOMC,GAAc,SAACtF,EAAOuF,GAC/B,MAAO,CACHpF,KCGoB,eDFpBqF,QAASxF,EACTuF,OAAQA,IAWHE,GAAS,WAKlB,OAJAC,aAAaC,WAAW,SACxBD,aAAaC,WAAW,kBACxBD,aAAaC,WAAW,UAEjB,CACHxF,KCdmB,gBDkBdyF,GAAmB,SAACC,GAC7B,OAAO,SAAAC,GACHC,YAAW,WACPD,EAASL,QACO,IAAjBI,KAiCEG,GAAsB,SAACC,GAChC,MAAO,CACH9F,KCvD8B,yBDwD9B8F,KAAMA,I,mOE/DRC,G,2MAKF7G,MAAQ,CACJ8G,YAAY,G,EAmBhBC,gBAAkB,WACV,EAAKtJ,MAAMiB,gBACX,EAAKyB,SAAU,CAAE2G,YAAY,KAE7B,EAAKrJ,MAAMuJ,sBAAsB,aACjC,EAAKvJ,MAAMwJ,QAAQC,KAAK,W,EAKhCC,sBAAwB,WACpB,EAAKhH,SAAU,CAAE2G,YAAY,K,EAGjCM,wBAA0B,WACtB,EAAK3J,MAAM4J,iBACX,EAAK5J,MAAMwJ,QAAQC,KAAK,c,mFA/BxB1F,QAAQC,IAAInB,KAAK7C,OACjB6C,KAAK7C,MAAM6J,sB,0CAGOzF,GAQlB,OAPYF,OAAOC,KAAMC,GACpBC,KAAK,SAAAC,GACF,OAAOF,EAAYE,MAEtBK,QAAQ,SAAEmF,EAAKjF,GACZ,OAAOiF,EAAMjF,IACd,GACM,I,+BAuBb,IAAMkF,E,2WAAY,IACXlH,KAAK7C,MAAMgK,MAElB,IAAM,IAAItF,KAAOqF,EACbA,EAAarF,GAAOqF,EAAarF,IAAQ,EAE7C,IAAIuF,EAAe,KACfnG,EAASjB,KAAK7C,MAAMyH,MAAQ,2DAAsC,kBAACyC,GAAD,MAuBtE,OArBKrH,KAAK7C,MAAMgK,OACZlG,EACI,kBAAC,WAAD,KACI,kBAACkB,EAAD,CAAQZ,YAAavB,KAAK7C,MAAMgK,OAChC,kBAACpE,GAAD,CACII,gBAAiBnD,KAAK7C,MAAMmK,kBAC5BlE,kBAAmBpD,KAAK7C,MAAMoK,oBAC9B7E,SAAUwE,EACV5D,YAAatD,KAAKwH,oBAAoBxH,KAAK7C,MAAMgK,MACjD5D,QAASvD,KAAKyG,gBACd5H,OAAQmB,KAAK7C,MAAMiB,gBACnB4E,MAAOhD,KAAK7C,MAAM6F,SAG9BoE,EAAe,kBAAC,GAAD,CACX7F,YAAavB,KAAK7C,MAAMgK,KACxBnE,MAAOhD,KAAK7C,MAAM6F,MAClBqB,kBAAmBrE,KAAK6G,sBACxBvC,kBAAmBtE,KAAK8G,2BAI5B,kBAAC,WAAD,KACI,kBAAC,GAAD,CAAO/H,KAAMiB,KAAKN,MAAM8G,WAAY7C,YAAa3D,KAAK6G,uBACjDO,GAEJnG,O,GAhFWf,aAyGbC,gBAnBS,SAAAT,GACpB,MAAO,CACHyH,KAAMzH,EAAM+H,cAAclG,YAC1ByB,MAAOtD,EAAM+H,cAAcC,WAC3B9C,MAAOlF,EAAM+H,cAAc7C,MAC3BxG,gBAAsC,OAArBsB,EAAMU,KAAKC,UAIT,SAAA8F,GACvB,MAAO,CACHmB,kBAAmB,SAACK,GAAD,OAAaxB,ECzG7B,CACH3F,KFLsB,iBEMtBoH,eDuG+DD,KAC/DJ,oBAAqB,SAACI,GAAD,OAAaxB,ECnG/B,CACH3F,KFXyB,oBEYzBoH,eDiGoED,KACpEX,kBAAmB,kBAAMb,GChFtB,SAAAA,GACHxB,GAAMkD,IAAI,iEACLC,MAAM,SAAA1C,GACJe,EAhBJ,CACH3F,KFjBuB,kBEkBvBe,YAc+B6D,EAAS2C,UAEnCC,OAAO,SAAApD,GACJuB,EAZL,CACH3F,KFvBgC,oCC6GhCuG,eAAgB,kBAAMZ,EHzEnB,CACH3F,KEhCqB,mBCyGrBkG,sBAAuB,SAACJ,GAAD,OAAUH,EAAS8B,GAA4B3B,QAI/DnG,CAA6CsE,GAAkB8B,GAAe5B,K,oBE3F9EuD,GApBS,SAAC/K,GACrB,OACI,yBAAKC,UAAWC,KAAQ8K,iBACpB,uDACA,yBAAKvE,MAAO,CAACwE,MAAO,OAAQC,OAAQ,SAChC,kBAAClG,EAAD,CAAQZ,YAAapE,EAAMoE,eAE/B,kBAACyC,GAAD,CAAQC,QAAQ,SACZzF,QAASrB,EAAMmL,mBADnB,UAIA,kBAACtE,GAAD,CAAQC,QAAQ,UACZzF,QAASrB,EAAMoL,mBADnB,c,wCCiDGC,GA/DD,SAACrL,GAEX,IAAIsL,EAAe,KACbC,EAAe,CAACrL,KAAQsL,cAM9B,OAJIxL,EAAMyL,SAAWzL,EAAM0L,gBAAkB1L,EAAM2L,SAC/CJ,EAAa9B,KAAKvJ,KAAQ0L,SAGtB5L,EAAM6L,aACV,IAAM,QACFP,EAAe,yCACXrL,UAAWsL,EAAalJ,KAAK,MACzBrC,EAAM8L,cAFC,CAGXC,MAAO/L,EAAM+L,MACbC,SAAUhM,EAAMiM,WAEpB,MAEJ,IAAM,WACFX,EAAe,4CACXrL,UAAWsL,EAAalJ,KAAK,MACzBrC,EAAM8L,cAFC,CAGXC,MAAO/L,EAAM+L,MACbC,SAAUhM,EAAMiM,WAEpB,MAEJ,IAAM,SACFX,EAAe,4BACXrL,UAAWsL,EAAalJ,KAAK,KAC7B0J,MAAO/L,EAAM+L,MACbC,SAAUhM,EAAMiM,SACfjM,EAAM8L,cAAcI,QAAQ7H,KAAI,SAAA8H,GAAM,OACnC,4BACIzH,IAAKyH,EAAOJ,MACZA,MAAOI,EAAOJ,OACbI,EAAOC,kBAMpB,MAEJ,QACId,EAAe,yCACXrL,UAAWsL,EAAalJ,KAAK,MACzBrC,EAAM8L,cAFC,CAGXC,MAAO/L,EAAM+L,MACbC,SAAUhM,EAAMiM,WAG5B,OACI,yBAAKhM,UAAWC,KAAQmM,OACpB,2BAAOpM,UAAWC,KAAQiF,OACrBnF,EAAMoF,OAEVkG,I,ilBClDPgB,G,2MACF/J,MAAQ,CACJgK,UAAW,CACPC,KAAM,CACFX,YAAa,QACbC,cAAe,CACXzI,KAAM,OACNoJ,YAAa,aAEjBV,MAAO,GACPW,WAAY,CACRC,UAAU,GAEdC,OAAO,EACPjB,SAAS,GAEbkB,OAAQ,CACJhB,YAAa,QACbC,cAAe,CACXzI,KAAM,OACNoJ,YAAa,UAEjBV,MAAO,GACPW,WAAY,CACRC,UAAU,GAEdC,OAAO,EACPjB,SAAS,GAEbmB,QAAS,CACLjB,YAAa,QACbC,cAAe,CACXzI,KAAM,OACNoJ,YAAa,YAEjBV,MAAO,GACPW,WAAY,CACRC,UAAU,EACVI,UAAW,EACXC,UAAW,EACXC,WAAW,GAEfL,OAAO,EACPjB,SAAS,GAEbuB,QAAS,CACLrB,YAAa,QACbC,cAAe,CACXzI,KAAM,OACNoJ,YAAa,WAEjBV,MAAO,GACPW,WAAY,CACRC,UAAU,GAEdC,OAAO,EACPjB,SAAS,GAEbwB,MAAO,CACHtB,YAAa,QACbC,cAAe,CACXzI,KAAM,QACNoJ,YAAa,eAEjBV,MAAO,GACPW,WAAY,CACRC,UAAU,EACVS,SAAS,GAEbR,OAAO,EACPjB,SAAS,GAEb0B,eAAgB,CACZxB,YAAa,SACbC,cAAe,CACXI,QAAS,CACL,CAACH,MAAO,UAAWK,aAAc,WACjC,CAACL,MAAO,WAAYK,aAAc,cAG1CL,MAAO,UACPW,WAAY,GACZE,OAAO,IAGfU,aAAa,G,EAGjBC,aAAe,SAAEC,GACbA,EAAMC,iBAEN,IAAMC,EAAW,GACjB,IAAK,IAAIC,KAAyB,EAAKpL,MAAMgK,UACzCmB,EAASC,GAAyB,EAAKpL,MAAMgK,UAAUoB,GAAuB5B,MAElF,IAAM6B,EAAQ,CACVxJ,YAAa,EAAKpE,MAAMgK,KACxBnE,MAAO,EAAK7F,MAAM6F,MAClBgI,UAAWH,EACXjF,OAAY,EAAKzI,MAAMyI,QAG3B,EAAKzI,MAAM8N,cAAcF,EAAO,EAAK5N,MAAMkD,Q,EAmC/C6K,oBAAsB,SAACP,EAAOQ,GAC1B,IAAMC,EAAgB,MACf,EAAK1L,MAAMgK,WAEZ2B,EAAkB,MACjBD,EAAiBD,IAExBE,EAAmBnC,MAAQyB,EAAMW,OAAOpC,MACxCmC,EAAmBtB,MAAQ,EAAKwB,cAAcF,EAAmBnC,MAAOmC,EAAmBxB,YAC3FwB,EAAmBvC,SAAU,EAC7BsC,EAAiBD,GAAmBE,EAEpC,IAAIZ,GAAc,EAClB,IAAK,IAAIU,KAAmBC,EACxBX,EAAcW,EAAiBD,GAAiBpB,OAASU,EAE7D,EAAK5K,SAAS,CAAC6J,UAAW0B,EAAkBX,YAAaA,K,6EA/C/CvB,EAAOsC,GACjB,IAAIC,GAAU,EACd,IAAKD,EACD,OAAO,EAeX,GAZIA,EAAM1B,WACN2B,EAA2B,KAAjBvC,EAAMwC,QAAiBD,GAGjCD,EAAMtB,YACNuB,EAAUvC,EAAMhH,QAAUsJ,EAAMtB,WAAauB,GAG7CD,EAAMrB,YACNsB,EAAUvC,EAAMhH,QAAUsJ,EAAMrB,WAAasB,GAG7CD,EAAMjB,QAAS,CAEfkB,EADgB,wIACEE,KAAKzC,IAAUuC,EAGrC,GAAID,EAAMpB,UAAW,CAEjBqB,EADgB,QACEE,KAAKzC,IAAUuC,EAGrC,OAAOA,I,+BAsBA,IAAD,OACAG,EAAoB,GAC1B,IAAK,IAAI/J,KAAO7B,KAAKN,MAAMgK,UACvBkC,EAAkBhF,KAAK,CACnBiF,GAAIhK,EACJiK,OAAQ9L,KAAKN,MAAMgK,UAAU7H,KAGrC,IAAIkK,EACA,0BAAMC,SAAUhM,KAAK0K,cAChBkB,EAAkBpK,KAAI,SAAAyK,GAAW,OAC9B,kBAACzC,GAAD,CACI3H,IAAKoK,EAAYJ,GACjB7C,YAAaiD,EAAYH,OAAO9C,YAChCC,cAAegD,EAAYH,OAAO7C,cAClCC,MAAO+C,EAAYH,OAAO5C,MAC1BN,SAAUqD,EAAYH,OAAO/B,MAC7BlB,eAAgBoD,EAAYH,OAAOjC,WACnCf,QAASmD,EAAYH,OAAOhD,QAC5BM,QAAS,SAACuB,GAAD,OAAW,EAAKO,oBAAoBP,EAAOsB,EAAYJ,UAExE,kBAAC7H,GAAD,CAAQC,QAAQ,UAAUvB,UAAW1C,KAAKN,MAAM+K,aAAhD,UAMR,OAHKzK,KAAK7C,MAAM+O,UACZH,EAAO,kBAAC1E,GAAD,OAGP,yBAAKjK,UAAWC,KAAQoM,aACpB,uDACCsC,O,GA1LS7L,aAgNXC,gBAhBS,SAAAT,GACpB,MAAO,CACHyH,KAAMzH,EAAM+H,cAAclG,YAC1ByB,MAAOtD,EAAM+H,cAAcC,WAC3BwE,QAASxM,EAAMqL,MAAMmB,QACrB7L,MAAOX,EAAMU,KAAKC,MAClBuF,OAAQlG,EAAMU,KAAKwF,WAIA,SAAAO,GACvB,MAAO,CACH8E,cAAe,SAACD,EAAW3K,GAAZ,OAAsB8F,EP/Lf,SAAE6E,EAAW3K,GACvC,OAAO,SAAA8F,GACHA,EAPG,CACH3F,KEf6B,0BFsB7BmE,GAAMwH,KAAM,qBAAuB9L,EAAO2K,GACrClD,MAAM,SAAA1C,GACHlE,QAAQC,IAAKiE,EAAS2C,MACtB5B,EA3BqB,SAAE0F,EAAIb,GACvC,MAAO,CACHxK,KEC+B,0BFA/B4L,QAASP,EACTb,UAAWA,GAuBOqB,CAAuBjH,EAAS2C,KAAK4B,KAAMqB,OAExDhD,OAAO,SAAApD,GACJuB,EAtBkB,SAAEvB,GAChC,MAAO,CACHpE,KEN4B,uBFO5BoE,MAAOA,GAmBW0H,CAAoB1H,QOsLQqD,CAAuB+C,EAAW3K,QAIzEF,CAA6CsE,GAAiBgF,GAAa9E,KCnNpF4H,G,2MAEFC,yBAA2B,WACvB,EAAKrP,MAAMwJ,QAAQ8F,U,EAGvBC,yBAA2B,WACvB,EAAKvP,MAAMwJ,QAAQgG,QAAS,2B,wEAI5B,IAAIC,EAAU,kBAAC,IAAD,CAAUhP,GAAG,MAC3B,GAAKoC,KAAK7C,MAAMgK,KAAO,CACnB,IAAM0F,EAAoB7M,KAAK7C,MAAM2P,UAAY,kBAAC,IAAD,CAAUlP,GAAG,MAAQ,KACtEgP,EACI,6BACKC,EACD,kBAAC1E,GAAD,CACI5G,YAAavB,KAAK7C,MAAMgK,KACxBmB,kBAAmBtI,KAAKwM,yBACxBjE,kBAAmBvI,KAAK0M,2BAC5B,kBAAC,IAAD,CACIpG,KAAMtG,KAAK7C,MAAM4P,MAAMzG,KAAO,gBAC9B0G,UAAWvD,MAI3B,OAAOmD,M,GA3BQ1M,aAsCRC,gBAPS,SAAAT,GACpB,MAAO,CACHyH,KAAMzH,EAAM+H,cAAclG,YAC1BuL,UAAWpN,EAAMqL,MAAM+B,aAIhB3M,CAA4BoM,I,oBCR5BxB,GAlCD,SAAC5N,GACX,IAAMoE,EAAc,GAEpB,IAAK,IAAIqG,KAAkBzK,EAAMoE,YAC7BA,EAAYqF,KAAK,CACb+C,KAAM/B,EACNqF,OAAQ9P,EAAMoE,YAAYqG,KAIlC,IAAMsF,EAAmB3L,EAAYC,KAAI,SAAA2L,GACrC,OAAQ,0BACJvJ,MAAO,CACHQ,cAAe,aACfgJ,QAAS,eACT/E,OAAQ,QACRgF,OAAQ,iBACRC,QAAS,OAEbzL,IAAKsL,EAAGxD,MACHwD,EAAGxD,KATJ,KASYwD,EAAGF,OATf,QAYZ,OACI,yBAAK7P,UAAWC,KAAQkQ,OACpB,2CAAiBL,GACjB,qCAAU,uCAAa/P,EAAM6F,MAAMC,QAAQ,OCrBjDuK,G,4LAEExN,KAAK7C,MAAMsQ,cAAczN,KAAK7C,MAAMkD,MAAOL,KAAK7C,MAAMyI,U,+BAItD,IAAI8H,EAAS,kBAACrG,GAAD,MASb,OARMrH,KAAK7C,MAAM+O,UACbwB,EAAS1N,KAAK7C,MAAMuQ,OAAOlM,KAAK,SAAAuJ,GAAK,OACjC,kBAACwC,GAAD,CACI1L,IAAKkJ,EAAMc,GACXtK,YAAawJ,EAAMxJ,YACnByB,MAAO+H,EAAM/H,YAIrB,6BACK0K,O,GAjBIxN,aAsCNC,gBAfS,SAAAT,GACpB,MAAO,CACHgO,OAAQhO,EAAMqL,MAAM2C,OACpBxB,QAASxM,EAAMqL,MAAMmB,QACrB7L,MAAOX,EAAMU,KAAKC,MAClBuF,OAAQlG,EAAMU,KAAKwF,WAIA,SAAAO,GACvB,MAAO,CACHsH,cAAe,SAACpN,EAAOuF,GAAR,OAAmBO,EVqBf,SAAC9F,EAAOuF,GAC/B,OAAO,SAAAO,GACHA,EAPG,CACH3F,KElD0B,uBF0D1B,IAAMmN,EAAc,SAAWtN,EAAQ,8BAAgCuF,EAAS,IAChFjB,GAAMkD,IAAK,eAAiB8F,GACvB7F,MAAM,SAAAzC,GACH,IAAMuI,EAAgB,GACtB,IAAM,IAAI/L,KAAOwD,EAAI0C,KACjB6F,EAAchH,KAAd,MACOvB,EAAI0C,KAAKlG,GADhB,CAEIgK,GAAIhK,KAGZsE,EAjCL,CACH3F,KEnC4B,uBFoC5BkN,OA+BoCE,OAE/B5F,OAAO,SAAA6F,GACJ1H,EA7BL,CACH3F,KEzCyB,oBF0CzBoE,MA2BiCiJ,QUtCW5F,CAAoB5H,EAAOuF,QAIhEzF,CAAgDsE,GAAkB+I,GAAQ7I,K,qmBCpCnFmJ,G,2MAEFpO,MAAQ,CACJmD,SAAU,CACNyH,MAAO,CACHtB,YAAa,QACbC,cAAe,CACXzI,KAAM,QACNoJ,YAAa,gBAEjBV,MAAO,GACPW,WAAY,CACRC,UAAU,EACVS,SAAS,GAEbR,OAAO,EACPjB,SAAS,GAGbiF,SAAU,CACN/E,YAAa,QACbC,cAAe,CACXzI,KAAM,WACNoJ,YAAa,YAEjBV,MAAO,GACPW,WAAY,CACRC,UAAU,EACVI,UAAW,GAEfH,OAAO,EACPjB,SAAS,IAKjBkF,UAAU,G,EASd9C,oBAAsB,SAACP,EAAOsD,GAC1B,IAAMC,EAAe,MACd,EAAKxO,MAAMmD,SADG,eAEhBoL,EAFgB,MAGV,EAAKvO,MAAMmD,SAASoL,GAHV,CAIb/E,MAAOyB,EAAMW,OAAOpC,MACpBa,MAAO,EAAKwB,cAAcZ,EAAMW,OAAOpC,MAAO,EAAKxJ,MAAMmD,SAASoL,GAAapE,YAC/Ef,SAAS,MAGjB,EAAKjJ,SAAS,CAACgD,SAAUqL,K,EA8B7BC,cAAgB,SAACxD,GACbA,EAAMC,iBACN,EAAKzN,MAAMiR,OAAO,EAAK1O,MAAMmD,SAASyH,MAAMpB,MACxC,EAAKxJ,MAAMmD,SAASkL,SAAS7E,MAC7B,EAAKxJ,MAAMsO,W,EAGnBK,sBAAwB,WACpB,EAAKxO,UAAS,SAAAE,GACV,MAAO,CAACiO,UAAWjO,EAAUiO,c,mFAtD3BhO,KAAK7C,MAAMmR,gBAAoD,MAAhCtO,KAAK7C,MAAMoR,kBAC5CvO,KAAK7C,MAAMuJ,0B,oCAoBLwC,EAAOsC,GAEjB,IAAIC,GAAU,EAEd,OAAKD,IAIDA,EAAM1B,WACN2B,EAA2B,KAAjBvC,EAAMwC,QAAiBD,GAGjCD,EAAMtB,YACNuB,EAAUvC,EAAMhH,QAAUsJ,EAAMtB,WAAauB,GAG7CD,EAAMrB,YACNsB,EAAUvC,EAAMhH,QAAUsJ,EAAMrB,WAAasB,GAG1CA,K,+BAiBA,IAAD,OACAG,EAAoB,GAE1B,IAAK,IAAI/J,KAAO7B,KAAKN,MAAMmD,SACvB+I,EAAkBhF,KAAK,CACnBiF,GAAIhK,EACJiK,OAAQ9L,KAAKN,MAAMmD,SAAShB,KAIpC,IAAIkK,EAAOH,EAAkBpK,KAAI,SAAAyK,GAAW,OACxC,kBAACzC,GAAD,CACI3H,IAAKoK,EAAYJ,GACjB7C,YAAaiD,EAAYH,OAAO9C,YAC5BC,cAAegD,EAAYH,OAAO7C,cAClCC,MAAO+C,EAAYH,OAAO5C,MAC1BN,SAAUqD,EAAYH,OAAO/B,MAC7BlB,eAAgBoD,EAAYH,OAAOjC,WACnCf,QAASmD,EAAYH,OAAOhD,QAC5BM,QAAS,SAACuB,GAAD,OAAW,EAAKO,oBAAoBP,EAAOsB,EAAYJ,UAKxE7L,KAAK7C,MAAM+O,UACXH,EAAO,kBAAC1E,GAAD,OAGX,IAAImH,EAAe,KACfxO,KAAK7C,MAAMyH,QACX4J,EACI,2BAAIxO,KAAK7C,MAAMyH,MAAMW,UAI7B,IAAIkJ,EAAe,KAKnB,OAJIzO,KAAK7C,MAAMiB,kBACXqQ,EAAe,kBAAC,IAAD,CAAU7Q,GAAIoC,KAAK7C,MAAMoR,oBAIxC,yBAAKnR,UAAWC,KAAQyQ,MACnBW,EACAD,EACD,0BAAMxC,SAAUhM,KAAKmO,eAChBpC,EACD,kBAAC/H,GAAD,CAAQC,QAAQ,WAAhB,WAEJ,kBAACD,GAAD,CACIxF,QAASwB,KAAKqO,sBACdpK,QAAQ,UAFZ,aAGmBjE,KAAKN,MAAMsO,SAAW,SAAW,e,GArJjD9N,aA6KJC,gBAjBS,SAAAT,GACpB,MAAO,CACHwM,QAASxM,EAAMU,KAAK8L,QACpBtH,MAAOlF,EAAMU,KAAKwE,MAClBxG,gBAAsC,OAArBsB,EAAMU,KAAKC,MAC5BiO,eAAgB5O,EAAM+H,cAAciH,SACpCH,iBAAkB7O,EAAMU,KAAKmO,qBAIV,SAAApI,GACvB,MAAO,CACHiI,OAAQ,SAAC9D,EAAOyD,EAAUC,GAAlB,OAA+B7H,EVxI3B,SAACmE,EAAOyD,EAAUC,GAClC,OAAO,SAAA7H,GACHA,EAxCG,CACH3F,KCQkB,eDgClB,IAAMmO,EAAW,CACbrE,MAAOA,EACPyD,SAAUA,EACVa,mBAAmB,GAEnBC,EAAM,uHACLb,IACDa,EAAM,yHAEVlK,KAAMwH,KAAK0C,EAAKF,GACX7G,MAAK,SAAA1C,GACFlE,QAAQC,IAAIiE,GACZ,IAAM0J,EAAiB,IAAIC,MAAK,IAAIA,MAAOC,UAAsC,IAA1B5J,EAAS2C,KAAKkH,WACrElJ,aAAamJ,QAAQ,QAAS9J,EAAS2C,KAAKlC,SAC5CE,aAAamJ,QAAQ,iBAAkBJ,GACvC/I,aAAamJ,QAAQ,SAAU9J,EAAS2C,KAAKkH,WAE7C9I,EAASR,GAAYP,EAAS2C,KAAKlC,QAAST,EAAS2C,KAAKoH,UAC1DhJ,EAASF,GAAiBb,EAAS2C,KAAKkH,eAE3CjH,OAAM,SAAA6F,GACH1H,EAhDL,CACH3F,KCJiB,YDKjBoE,MA8C0BiJ,EAAIzI,SAAS2C,KAAKnD,YUgHIqD,CAAaqC,EAAOyD,EAAUC,KAC9EtH,sBAAuB,kBAAMP,EAAS8B,GAA4B,UAI3D9H,CAA6C2N,IClLtDsB,G,4LAGEpP,KAAK7C,MAAMkS,a,+BAKX,OACI,kBAAC,IAAD,CAAUzR,GAAG,U,GATJsC,aAoBNC,eAAQ,MANI,SAAAgG,GACvB,MAAO,CACHkJ,SAAU,kBAAMlJ,EAAS8B,UAIlB9H,CAAkCiP,ICd3CE,G,4LAGFtP,KAAK7C,MAAMoS,oB,+BAKX,IAAIC,EACF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOlJ,KAAK,QAAQ0G,UAAWc,KAC/B,kBAAC,IAAD,CAAOxH,KAAK,IAAIxI,OAAK,EAACkP,UAAWzG,KACjC,kBAAC,IAAD,CAAU3I,GAAG,OAgBjB,OAXIoC,KAAK7C,MAAMiB,kBACboR,EACE,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOlJ,KAAK,YAAY0G,UAAWT,KACnC,kBAAC,IAAD,CAAOjG,KAAK,UAAU0G,UAAWQ,KACjC,kBAAC,IAAD,CAAOlH,KAAK,UAAU0G,UAAWoC,KACjC,kBAAC,IAAD,CAAO9I,KAAK,IAAIxI,OAAK,EAACkP,UAAWzG,OAMvC,6BACE,kBAAC,EAAD,KACGiJ,Q,GA/BOtP,aAmDHuP,eAAWtP,aAZF,SAAAT,GACtB,MAAO,CACLtB,gBAAsC,OAArBsB,EAAMU,KAAKC,UAIL,SAAA8F,GACzB,MAAO,CACLoJ,gBAAiB,kBAAMpJ,GZqBhB,SAAAA,GACH,IAAM9F,EAAQ0F,aAAa2J,QAAQ,SACnC,GAAKrP,EAEE,CACH,IAAMyO,EAAiB,IAAIC,KAAKhJ,aAAa2J,QAAQ,mBACrD,GAAIZ,GAAkB,IAAIC,KACtB5I,EAASL,UACN,CACH,IAAMF,EAASG,aAAa2J,QAAQ,UAEpCvJ,EAASR,GAAYtF,EAAOuF,IAC5BO,EAASF,IAAkB6I,EAAeE,WAAY,IAAID,MAAOC,WAAW,YAThF7I,EAASL,aYpBK3F,CAA6CmP,KCnDnDK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS/C,MACvB,2D,+NClBC,IAAMgD,GAAe,SAACC,EAAWC,GACpC,O,2WAAO,IACAD,EADP,GAEOC,ICALC,GAAe,CACjB3O,YAAa,KACbmG,WAAY,EACZ9C,OAAO,GAGLuL,GAAoB,CACtBC,MAAO,GACPC,OAAQ,GACRC,KAAM,IACNC,MAAO,IAGLC,GAAgB,SAAE9Q,EAAO+Q,GAC3B,IAAMC,EAAiB,eAAMD,EAAO7I,eAAiBlI,EAAM6B,YAAYkP,EAAO7I,gBAAkB,GAE1F+I,EAAe,CACjBpP,YAFuBwO,GAAcrQ,EAAM6B,YAAamP,GAGxDhJ,WAAYhI,EAAMgI,WAAayI,GAAkBM,EAAO7I,gBACxD8G,UAAU,GAEd,OAAOqB,GAAcrQ,EAAOiR,IAG1BC,GAAmB,SAAClR,EAAO+Q,GAC7B,IAAMI,EAAU,eAAMJ,EAAO7I,eAAiBlI,EAAM6B,YAAYkP,EAAO7I,gBAAkB,GAEnFkJ,EAAY,CACdvP,YAFgBwO,GAAcrQ,EAAM6B,YAAasP,GAGjDnJ,WAAYhI,EAAMgI,WAAayI,GAAkBM,EAAO7I,gBACxD8G,UAAU,GAEd,OAAOqB,GAAcrQ,EAAOoR,IAG1BC,GAAiB,SAACrR,EAAO+Q,GAC3B,OAAOV,GAAcrQ,EAAO,CACxB6B,YAAa,CACT6O,MAAOK,EAAOlP,YAAY6O,MAC1BG,MAAOE,EAAOlP,YAAYgP,MAC1BF,OAAQI,EAAOlP,YAAY8O,OAC3BC,KAAMG,EAAOlP,YAAY+O,MAE7B5I,WAAY,EACZ9C,OAAO,EACP8J,UAAU,KAIZsC,GAAyB,SAACtR,EAAO+Q,GACnC,OAAOV,GAAcrQ,EAAO,CAAEkF,OAAO,KAa1BqM,GAVC,WAAqC,IAAnCvR,EAAkC,uDAA1BwQ,GAAcO,EAAY,uCAChD,OAASA,EAAOjQ,MACZ,Id1DsB,iBc0DW,OAAOgQ,GAAe9Q,EAAO+Q,GAC9D,Id1DyB,oBc0DW,OAAOG,GAAiBlR,EAAO+Q,GACnE,Id1DuB,kBc0DW,OAAOM,GAAerR,EAAO+Q,GAC/D,Id1DgC,2Bc0DW,OAAOO,GAAuBtR,GACzE,QAAS,OAAOA,IC3DlBwQ,GAAe,CACjBxC,OAAQ,GACRxB,SAAS,EACTY,WAAW,GAGToE,GAAe,SAAExR,EAAO+Q,GAC1B,OAAOV,GAAcrQ,EAAO,CAAEoN,WAAW,KAGvCqE,GAAsB,SAAEzR,EAAO+Q,GACjC,OAAOV,GAAcrQ,EAAO,CAAEwM,SAAS,KAGrCG,GAAwB,SAAE3M,EAAO+Q,GACnC,IAAMW,EAAWrB,GAAcU,EAAOzF,UAAW,CAAEa,GAAI4E,EAAOrE,UAC9D,OAAO2D,GAAcrQ,EAAO,CACxBwM,SAAS,EACTY,WAAW,EACXY,OAAQhO,EAAMgO,OAAOzL,OAAQmP,MAI/B9E,GAAqB,SAAE5M,EAAO+Q,GAChC,OAAOV,GAAcrQ,EAAO,CAAEwM,SAAS,KAGrCmF,GAAmB,SAAE3R,EAAO+Q,GAC9B,OAAOV,GAAcrQ,EAAO,CAAEwM,SAAS,KAGrCoF,GAAqB,SAAE5R,EAAO+Q,GAChC,OAAOV,GAAcrQ,EAAO,CACxBgO,OAAQ+C,EAAO/C,OACfxB,SAAS,KAIXqF,GAAkB,SAAE7R,EAAO+Q,GAC7B,OAAOV,GAAcrQ,EAAO,CAAEwM,SAAS,KAgB5B+E,GAbC,WAAqC,IAAnCvR,EAAkC,uDAA1BwQ,GAAcO,EAAY,uCAChD,OAASA,EAAOjQ,MACZ,IfvCqB,gBeuCW,OAAO0Q,GAAcxR,GACrD,If3C6B,wBe2CW,OAAOyR,GAAqBzR,GACpE,If3C+B,0Be2CW,OAAO2M,GAAuB3M,EAAO+Q,GAC/E,If3C4B,uBe2CW,OAAOnE,GAAoB5M,GAClE,IfzC0B,qBeyCW,OAAO2R,GAAkB3R,GAC9D,IfzC4B,uBeyCW,OAAO4R,GAAoB5R,EAAO+Q,GACzE,IfzCyB,oBeyCW,OAAOc,GAAiB7R,GAC5D,QAAS,OAAOA,ICnDlBwQ,GAAe,CACjB7P,MAAO,KACPuF,OAAQ,KACRhB,MAAO,KACPsH,SAAS,EACTqC,iBAAkB,KAGhBiD,GAAY,SAAE9R,EAAO+Q,GACvB,OAAOV,GAAcrQ,EAAO,CAAEkF,MAAO,KAAMsH,SAAS,KAGlDvG,GAAc,SAACjG,EAAO+Q,GACxB,OAAOV,GAAcrQ,EAAO,CACxBW,MAAOoQ,EAAO5K,QACdD,OAAQ6K,EAAO7K,OACfhB,MAAO,KACPsH,SAAS,KAIXuF,GAAW,SAAC/R,EAAO+Q,GACrB,OAAOV,GAAcrQ,EAAO,CACxBkF,MAAO6L,EAAO7L,MACdsH,SAAS,KAIXwF,GAAa,SAAChS,EAAO+Q,GACvB,OAAOV,GAAarQ,EAAO,CAAEW,MAAO,KAAMuF,OAAQ,QAGhDS,GAAsB,SAAC3G,EAAO+Q,GAEhC,OAAOV,GAAarQ,EAAO,CACvB6O,iBAAkBkC,EAAOnK,QAgBlB2K,GAZC,WAAqC,IAAnCvR,EAAkC,uDAA1BwQ,GAAcO,EAAY,uCAChD,OAASA,EAAOjQ,MACZ,IhB9BkB,agB8BW,OAAOgR,GAAU9R,GAC9C,IhB9BoB,egB8BW,OAAOiG,GAAYjG,EAAO+Q,GACzD,IhB9BiB,YgB8BW,OAAOgB,GAAS/R,EAAO+Q,GACnD,IhB9BmB,cgB8BW,OAAOiB,GAAWhS,GAChD,IhB7B8B,yBgB6BW,OAAO2G,GAAoB3G,EAAO+Q,GAC3E,QACI,OAAO/Q,ICpCbiS,GAAmB/B,OAAOgC,sCAAwCC,IAElEC,GAAcC,YAAgB,CAChCtK,cAAeuK,GACfjH,MAAOkH,GACP7R,KAAM8R,KAGJC,GAAQC,YAAYN,GAAaH,GACnCU,YAAgBC,OAGdC,GACF,kBAAC,IAAD,CAAUJ,MAAOA,IACb,kBAAC,IAAD,KACI,kBAAC,GAAD,QAKZK,IAASC,OAAQF,GAAKG,SAASC,eAAgB,SL+FzC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhL,MAAK,SAAAiL,GACjCA,EAAaC,kB","file":"static/js/main.29fa1e85.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Close\":\"SideDrawer_Close__9j7x-\",\"Logo\":\"SideDrawer_Logo__3voUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"Logo\":\"Toolbar_Logo__3Lk47\",\"DesktopOnly\":\"Toolbar_DesktopOnly__LuPaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__2WLOk\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__m405X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load2\":\"Spinner_load2__2gkgc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3PsXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1Zul_\"};","import React from 'react';\nimport burgerLogo from '../../assets/images/burger-logo.png';\nimport classes from './Logo.module.css';\n\nconst logo = (props) => (\n    <div className={classes.Logo}>\n        <img src={burgerLogo} alt=\"MyBurger\" />\n    </div>\n);\n\nexport default logo;","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport classes from './NavigationItem.module.css';\n\n\nconst navigationItem = (props) => (\n    <li className={classes.NavigationItem}>\n        <NavLink \n            to={props.link}\n            exact={props.exact}\n            activeClassName={classes.active}>\n                {props.children}\n        </NavLink>\n    </li>\n    \n);\n\nexport default navigationItem;","import React from 'react';\nimport classes from './NavigationItems.module.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = (props) => (\n    <ul className={classes.NavigationItems}>\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\n        { props.isAuthenticated \n            ? <NavigationItem link=\"/orders\">Orders</NavigationItem>\n            : null }\n        { !props.isAuthenticated \n            ? <NavigationItem link=\"/auth\">Authenticate</NavigationItem>\n            : <NavigationItem link=\"/logout\">Logout</NavigationItem>}\n        \n    </ul>\n);\n\nexport default navigationItems;","import React from 'react';\nimport classes from './DrawerToggle.module.css';\n\nconst drawerToggle = (props) => (\n    <div \n        className={classes.DrawerToggle}\n        onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawerToggle;","import React from 'react';\nimport classes from './Toolbar.module.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../../Navigation/NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\nconst toolbar = (props) => (\n    <header className={classes.Toolbar}>\n        <DrawerToggle clicked={props.drawerToggleClicked} />\n        <div className={classes.Logo}>\n            <Logo />\n        </div>\n        \n        <nav className={classes.DesktopOnly}>\n            <NavigationItems isAuthenticated={props.isAuth} />\n        </nav>\n    </header>\n);\n\nexport default toolbar;","import React from 'react';\nimport classes from './Backdrop.module.css';\n\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React, {Fragment} from 'react';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\n\nimport classes from './SideDrawer.module.css';\n\nconst sideDrawer = (props) => {\n\n    let attachedClasses = [classes.SideDrawer, classes.Close];\n\n    if (props.open) {\n        attachedClasses = [classes.SideDrawer, classes.Open];\n    }\n\n    return (\n        <Fragment>\n            <Backdrop show={props.open} clicked={props.closed} />\n            <div className={attachedClasses.join(' ')}>\n                <div className={classes.Logo}>\n                    <Logo />\n                </div>\n                \n                <nav>\n                    <NavigationItems isAuthenticated={props.isAuth} />\n                </nav>\n            </div>\n\n        </Fragment>\n        \n    );\n};\n\nexport default sideDrawer;","import React, {Component, Fragment} from 'react';\nimport { connect } from 'react-redux';\n\nimport classes from './Layout.module.css';\nimport Toolbar from '../Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer';\n\nclass Layout extends Component {\n\n    state = {\n        showSideDrawer: false\n    }\n\n    sideDrawerClosedHander = () => {\n        this.setState({showSideDrawer: false});\n    }\n\n    sideDrawerToggleHandler = () => {\n\n        this.setState((prevState) => {\n            return {showSideDrawer: !prevState.showSideDrawer}\n        });\n    }\n\n    \n    render () {\n        return (\n            <Fragment>\n                <Toolbar \n                    isAuth={this.props.isAuthenticated}\n                    drawerToggleClicked={this.sideDrawerToggleHandler} />\n                <SideDrawer \n                    isAuth={this.props.isAuthenticated}\n                    open={this.state.showSideDrawer}\n                    closed={this.sideDrawerClosedHander} \n                    />\n                <main className={classes.Content}>\n                    {this.props.children}\n                </main>\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.auth.token !== null\n    }\n};\n\nexport default connect(mapStateToProps)(Layout);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './BurgerIngredient.module.css';\n\n\nclass BurgerIngredient extends Component {\n\n    render() {\n        let  ingredient = null;\n\n        switch (this.props.type) {\n            case ('bread-bottom'):\n                ingredient = <div className={classes.BreadBottom}></div>;\n                break;\n            case ('bread-top'):\n                ingredient = (\n                    <div className={classes.BreadTop}>\n                        <div className={classes.Seeds1}></div>\n                        <div className={classes.Seeds2}></div>\n                    </div>\n                );\n                break;\n            case ('meat'):\n                ingredient = <div className={classes.Meat}></div>;\n                break;\n            case ('cheese'):\n                ingredient = <div className={classes.Cheese}></div>;\n                break;\n            case ('bacon'):\n                ingredient = <div className={classes.Bacon}></div>;\n                break;\n            case ('salad'):\n                ingredient = <div className={classes.Salad}></div>;\n                break;\n            default:\n                ingredient = null;\n        }\n\n        return ingredient;\n    }\n    \n};\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n};\n\nexport default BurgerIngredient;","import React from 'react';\n\nimport classes from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = ( props ) => {\n    console.log(props);\n    let transformedIngredients = Object.keys( props.ingredients )\n        .map( igKey => {\n            return [...Array( props.ingredients[igKey] )].map( ( _, i ) => {\n                return <BurgerIngredient key={igKey + i} type={igKey} />;\n            } );\n        } )\n        .reduce((arr, el) => {\n            return arr.concat(el)\n        }, []);\n    if (transformedIngredients.length === 0) {\n        transformedIngredients = <p>Please start adding ingredients!</p>;\n    }\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\" />\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    );\n};\n\nexport default burger;","import React from 'react';\nimport classes from './BuildControl.module.css';\n\nconst buildControl = (props) => (\n    <div className={classes.BuildControl}>\n        <div className={classes.Label}>{props.label}</div>\n        <button className={classes.Less}\n            onClick={props.removed}\n            disabled={props.disabled}>\n                Less\n        </button>\n        <button className={classes.More}\n            onClick={props.added}>\n                More\n        </button>\n    </div>\n);\n\nexport default buildControl;","import React from 'react';\nimport classes from './BuildControls.module.css';\n\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n    { label: 'Salad',   type: 'salad' },\n    { label: 'Bacon',   type: 'bacon' },\n    { label: 'Cheese',  type: 'cheese' },\n    { label: 'Meat',    type: 'meat' },\n]\n\nconst buildControls = (props) => (\n    <div className={classes.BuildControls}>\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\n        {controls.map(ctrl => (\n            <BuildControl \n                key={ctrl.label} \n                label={ctrl.label} \n                added={() => props.ingredientAdded(ctrl.type)} \n                removed={() => props.ingredientRemoved(ctrl.type)} \n                disabled={props.disabled[ctrl.type]} />\n        ))}\n        <button \n            className={classes.OrderButton}\n            disabled={!props.purchasable}\n            onClick={props.ordered}>\n                {props.isAuth ? 'ORDER NOW' : 'SIGN UP TO ORDER'}\n        </button>\n    </div>\n);\n\n\nexport default buildControls;","import React, {Fragment, Component} from 'react';\nimport classes from './Modal.module.css';\nimport Backdrop from '../Backdrop/Backdrop';\n\nclass Modal extends Component {\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return ((nextProps.show !== this.props.show) ||\n                (nextProps.children !== this.props.children) );\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\n                <div \n                    className={classes.Modal}\n                    style={{\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                        opacity: this.props.show ? '1' : '0'\n                    }}\n                    >\n                    {this.props.children}\n                </div>\n            </Fragment>\n            \n        );\n    }\n}\n\nexport default Modal;","import React from 'react';\nimport classes from './Button.module.css';\n\nconst button = (props) => (\n    <button\n        disabled={props.disabled}\n        className={[classes.Button, classes[props.btnType]].join(' ')}\n        onClick={props.clicked}>\n            {props.children}\n    </button>\n\n);\n\nexport default button;","import React, {Fragment, Component} from 'react';\nimport Button from '../../UI/Button/Button';\n\nclass OrderSummary extends Component {\n\n    render () {\n        const ingredientSummary = Object.keys(this.props.ingredients)\n            .map(igKey => {\n                return (\n                    <li key={igKey}>\n                        <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {this.props.ingredients[igKey]}\n                    </li>\n                );\n            });\n\n        return (\n            <Fragment>\n                <h3>Your Order</h3>\n                <p>A delicious burger with the following ingredients:</p>\n                <ul>\n                    {ingredientSummary}\n                </ul>\n                <p><strong>Total Price: {this.props.price}</strong></p>\n                <p>Continue to checkout?</p>\n                <Button \n                    btnType=\"Danger\"\n                    clicked={this.props.purchaseCancelled}>\n                        CANCEL\n                </Button>\n                <Button\n                    btnType=\"Success\"\n                    clicked={this.props.purchaseContinued}>\n                        CONTINUE\n                </Button>\n            </Fragment>\n        );\n    }\n\n}\n\n\n\nexport default OrderSummary;","import React from 'react';\nimport classes from './Spinner.module.css';\n\nconst spinner = () => (\n    <div className={classes.Loader}></div>\n);\n\nexport default spinner;","import React, {Component, Fragment} from 'react';\nimport Modal from '../../components/UI/Modal/Modal';\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n    return class extends Component {\n\n        state = {\n            error: null\n        }\n\n        componentWillMount () {\n            this.reqInterceptor = axios.interceptors.request.use(req => {\n                this.setState({error: null});\n                return req;\n            });\n\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\n                this.setState({error: error});\n\n            });\n        }\n\n        componentWillUnmount() {\n            \n            axios.interceptors.request.eject(this.reqInterceptor);\n            axios.interceptors.response.eject(this.resInterceptor);\n            \n        }\n\n        errorConfirmedHandler = () => {\n            this.setState({error: null});\n        }\n\n        render () {\n            return (\n                <Fragment>\n                    <Modal \n                        show={this.state.error}\n                        modalClosed={this.errorConfirmedHandler}\n                        >\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Fragment>\n                \n            );\n        }\n    }\n}\n\n\nexport default withErrorHandler;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://react-my-burgur-5b6b9.firebaseio.com/'\n});\n\nexport default instance;","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const purchaseBurgerSuccess = ( id, orderData ) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderId: id,\n        orderData: orderData\n    };\n};\n\nexport const purchaseBurgerFail = ( error ) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error: error\n    };\n}\n\nexport const purchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START\n    };\n};\n\nexport const purchaseBurger = ( orderData, token ) => {\n    return dispatch => {\n        dispatch( purchaseBurgerStart() );\n        axios.post( '/orders.json?auth=' + token, orderData )\n            .then( response => {\n                console.log( response.data );\n                dispatch( purchaseBurgerSuccess( response.data.name, orderData ) );\n            } )\n            .catch( error => {\n                dispatch( purchaseBurgerFail( error ) );\n            } );\n    };\n};\n\nexport const purchaseInit = () => {\n    return {\n        type: actionTypes.PURCHASE_INIT\n    };\n};\n\nexport const fetchOrdersSuccess = ( orders ) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders: orders\n    };\n};\n\nexport const fetchOrdersFail = ( error ) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_FAIL,\n        error: error\n    };\n};\n\nexport const fetchOrdersStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDERS_START\n    };\n};\n\nexport const fetchOrders = (token, userId) => {\n    return dispatch => {\n        dispatch(fetchOrdersStart());\n\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\n        axios.get( '/orders.json' + queryParams)\n            .then( res => {\n                const fetchedOrders = [];\n                for ( let key in res.data ) {\n                    fetchedOrders.push( {\n                        ...res.data[key],\n                        id: key\n                    } );\n                }\n                dispatch(fetchOrdersSuccess(fetchedOrders));\n            } )\n            .catch( err => {\n                dispatch(fetchOrdersFail(err));\n            } );\n    };\n};","import axios from 'axios';\n\nimport * as actionTypes from './actionTypes';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    };\n};\n\nexport const authSuccess = (token, userId) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        idToken: token,\n        userId: userId\n    };\n};\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    };\n};\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('userId');\n    \n    return {\n        type: actionTypes.AUTH_LOGOUT\n    };\n};\n\nexport const checkAuthTimeout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime * 1000);\n    };\n};\n\nexport const auth = (email, password, isSignup) => {\n    return dispatch => {\n        dispatch(authStart());\n        const authData = {\n            email: email,\n            password: password,\n            returnSecureToken: true\n        };\n        let url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyANPm2dE_Gri-Jg8x10hwFN8kyU9f2v5Kc';\n        if (!isSignup) {\n            url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyANPm2dE_Gri-Jg8x10hwFN8kyU9f2v5Kc';\n        }\n        axios.post(url, authData)\n            .then(response => {\n                console.log(response);\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\n                localStorage.setItem('token', response.data.idToken);\n                localStorage.setItem('expirationDate', expirationDate);\n                localStorage.setItem('userId', response.data.expiresIn);\n\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\n                dispatch(checkAuthTimeout(response.data.expiresIn));\n            })\n            .catch(err => {\n                dispatch(authFail(err.response.data.error));\n            });\n    };\n};\n\nexport const setAuthRedirectPath = (path) => {\n    return {\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\n        path: path\n    };\n};\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (!token) {\n            dispatch(logout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if (expirationDate <= new Date()) {\n                dispatch(logout());\n            } else {\n                const userId = localStorage.getItem('userId');\n                \n                dispatch(authSuccess(token, userId));\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime())/1000));\n            }\n            \n        }\n    }\n};","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\n\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\n\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\n\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport axios from '../../axios-orders';\n\nclass BurgerBuilder extends Component {\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {...}\n    // }\n    state = {\n        purchasing: false\n    }\n\n    componentDidMount () {\n        console.log(this.props); \n        this.props.onInitIngredients();\n    }\n\n    updatePurchaseState ( ingredients ) {\n        const sum = Object.keys( ingredients )\n            .map( igKey => {\n                return ingredients[igKey];\n            } )\n            .reduce( ( sum, el ) => {\n                return sum + el;\n            }, 0 );\n        return sum > 0;\n    }\n\n    purchaseHandler = () => {\n        if (this.props.isAuthenticated) {\n            this.setState( { purchasing: true } );\n        } else {\n            this.props.onSetAuthRedirectPath('/checkout');\n            this.props.history.push('/auth');\n        }\n        \n    }\n\n    purchaseCancelHandler = () => {\n        this.setState( { purchasing: false } );\n    }\n\n    purchaseContinueHandler = () => {\n        this.props.onInitPurchase();\n        this.props.history.push('/checkout');\n    }\n\n    render () {\n        const disabledInfo = {\n            ...this.props.ings\n        };\n        for ( let key in disabledInfo ) {\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n        let orderSummary = null;\n        let burger = this.props.error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\n\n        if ( this.props.ings ) {\n            burger = (\n                <Fragment>\n                    <Burger ingredients={this.props.ings} />\n                    <BuildControls\n                        ingredientAdded={this.props.onIngredientAdded}\n                        ingredientRemoved={this.props.onIngredientRemoved}\n                        disabled={disabledInfo}\n                        purchasable={this.updatePurchaseState(this.props.ings)}\n                        ordered={this.purchaseHandler}\n                        isAuth={this.props.isAuthenticated}\n                        price={this.props.price} />\n                </Fragment>\n            );\n            orderSummary = <OrderSummary\n                ingredients={this.props.ings}\n                price={this.props.price}\n                purchaseCancelled={this.purchaseCancelHandler}\n                purchaseContinued={this.purchaseContinueHandler} />;\n        }\n        // {salad: true, meat: false, ...}\n        return (\n            <Fragment>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        error: state.burgerBuilder.error,\n        isAuthenticated: state.auth.token !== null\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\n        onInitIngredients: () => dispatch(actions.initIngredients()),\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler( BurgerBuilder, axios ));","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const addIngredient = ( name ) => {\n    return {\n        type: actionTypes.ADD_INGREDIENT,\n        ingredientName: name\n    };\n};\n\nexport const removeIngredient = ( name ) => {\n    return {\n        type: actionTypes.REMOVE_INGREDIENT,\n        ingredientName: name\n    };\n};\n\nexport const setIngredients = ( ingredients ) => {\n    return {\n        type: actionTypes.SET_INGREDIENTS,\n        ingredients: ingredients\n    };\n};\n\nexport const fetchIngredientsFailed = () => {\n    return {\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\n    };\n};\n\nexport const initIngredients = () => {\n    return dispatch => {\n        axios.get('https://react-my-burgur-5b6b9.firebaseio.com/ingredients.json' )\n            .then( response => {\n               dispatch(setIngredients(response.data));\n            } )\n            .catch( error => {\n                dispatch(fetchIngredientsFailed());\n            } );\n    };\n};","import React from 'react';\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\n\nimport classes from './CheckoutSummary.module.css';\n\nconst checkoutSummary = (props) => {\n    return (\n        <div className={classes.CheckoutSummary}>\n            <h1>We hope it tastes well!</h1>\n            <div style={{width: '100%', margin: 'auto'}}>\n                <Burger ingredients={props.ingredients} />\n            </div>\n            <Button btnType=\"Danger\"\n                clicked={props.checkoutCancelled}>\n                    CANCEL\n            </Button>\n            <Button btnType=\"Success\"\n                clicked={props.checkoutContinued}>\n                    CONTINUE\n            </Button>\n\n        </div>\n    );\n};\n\nexport default checkoutSummary;","import React from 'react';\nimport classes from './Input.module.css';\n\nconst input = (props) => {\n\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid)\n    }\n\n    switch (props.elementType) {\n        case ('input'):\n            inputElement = <input \n                className={inputClasses.join(' ')} \n                {...props.elementConfig} \n                value={props.value} \n                onChange={props.changed}\n                />;\n            break;\n\n        case ('textarea'):\n            inputElement = <textarea \n                className={inputClasses.join(' ')} \n                {...props.elementConfig} \n                value={props.value} \n                onChange={props.changed}\n                />\n            break;\n\n        case ('select'):\n            inputElement = <select \n                className={inputClasses.join(' ')} \n                value={props.value}\n                onChange={props.changed} >\n                {props.elementConfig.options.map(option => (\n                    <option \n                        key={option.value}\n                        value={option.value}>\n                        {option.displayValue}\n                    </option>\n                ))}\n                </select>\n\n\n            break;\n\n        default:\n            inputElement = <input \n                className={inputClasses.join(' ')} \n                {...props.elementConfig} \n                value={props.value} \n                onChange={props.changed}/>;\n    }\n\n    return (\n        <div className={classes.Input}>\n            <label className={classes.Label}>\n                {props.label}\n            </label>\n            {inputElement}\n        </div>\n    )\n};\n\nexport default input;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Button from '../../../components/UI/Button/Button';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport classes from './ContactData.module.css';\nimport axios from '../../../axios-orders';\nimport Input from '../../../components/UI/Input/Input';\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler'\nimport * as actions from '../../../store/actions/index';\n\nclass ContactData extends Component {\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Street'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'ZIP Code'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 5,\n                    isNumeric: true\n                },\n                valid: false,\n                touched: false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Country'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Your E-Mail'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {value: 'fastest', displayValue: 'Fastest'},\n                        {value: 'cheapest', displayValue: 'Cheapest'}\n                    ]\n                },\n                value: 'fastest',\n                validation: {},\n                valid: true\n            }\n        },\n        formIsValid: false\n    }\n\n    orderHandler = ( event ) => {\n        event.preventDefault();\n  \n        const formData = {};\n        for (let formElementIdentifier in this.state.orderForm) {\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\n        }\n        const order = {\n            ingredients: this.props.ings,\n            price: this.props.price,\n            orderData: formData,\n            userId:     this.props.userId\n        }\n\n        this.props.onOrderBurger(order, this.props.token);\n        \n    }\n\n    checkValidity(value, rules) {\n        let isValid = true;\n        if (!rules) {\n            return true;\n        }\n        \n        if (rules.required) {\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if (rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid\n        }\n\n        if (rules.maxLength) {\n            isValid = value.length <= rules.maxLength && isValid\n        }\n\n        if (rules.isEmail) {\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n            isValid = pattern.test(value) && isValid\n        }\n\n        if (rules.isNumeric) {\n            const pattern = /^\\d+$/;\n            isValid = pattern.test(value) && isValid\n        }\n\n        return isValid;\n    }\n\n    inputChangedHandler = (event, inputIdentifier) => {\n        const updatedOrderForm = {\n            ...this.state.orderForm\n        };\n        const updatedFormElement = { \n            ...updatedOrderForm[inputIdentifier]\n        };\n        updatedFormElement.value = event.target.value;\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\n        updatedFormElement.touched = true;\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\n        \n        let formIsValid = true;\n        for (let inputIdentifier in updatedOrderForm) {\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n        }\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\n    }\n\n    render () {\n        const formElementsArray = [];\n        for (let key in this.state.orderForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            });\n        }\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {formElementsArray.map(formElement => (\n                    <Input \n                        key={formElement.id}\n                        elementType={formElement.config.elementType}\n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value}\n                        invalid={!formElement.config.valid}\n                        shouldValidate={formElement.config.validation}\n                        touched={formElement.config.touched}\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\n                ))}\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\n            </form>\n        );\n        if ( this.props.loading ) {\n            form = <Spinner />;\n        }\n        return (\n            <div className={classes.ContactData}>\n                <h4>Enter your Contact Data</h4>\n                {form}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\nimport * as actions from '../../store/actions/index';\n\nclass Checkout extends Component {\n\n    checkoutCancelledHandler = () => {\n        this.props.history.goBack();\n    }\n\n    checkoutContinuedHandler = () => {\n        this.props.history.replace( '/checkout/contact-data' );\n    }\n\n    render () {\n        let summary = <Redirect to=\"/\" />\n        if ( this.props.ings ) {\n            const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\"/> : null;\n            summary = (\n                <div>\n                    {purchasedRedirect}\n                    <CheckoutSummary\n                        ingredients={this.props.ings}\n                        checkoutCancelled={this.checkoutCancelledHandler}\n                        checkoutContinued={this.checkoutContinuedHandler} />\n                    <Route\n                        path={this.props.match.path + '/contact-data'}\n                        component={ContactData} />\n                </div>\n            );\n        }\n        return summary;\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        purchased: state.order.purchased\n    }\n};\n\nexport default connect( mapStateToProps )( Checkout );","import React from 'react';\n\nimport classes from './Order.module.css';\n\nconst order = (props) => {\n    const ingredients = [];\n\n    for (let ingredientName in props.ingredients) {\n        ingredients.push({\n            name: ingredientName,\n            amount: props.ingredients[ingredientName]\n        });\n    }\n\n    const ingredientOutput = ingredients.map(ig => {\n        return (<span\n            style={{\n                textTransform: 'capitalize',\n                display: 'inline-block',\n                margin: '0 8px',\n                border: '1px solid #ccc',\n                padding: '5px'\n            }}\n            key={ig.name}>\n                {ig.name} ({ig.amount})</span>);\n    });\n\n    return (\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredientOutput}</p>\n            <p>Price: <strong>USD {props.price.toFixed(2)}</strong></p>\n        </div>\n    );\n}\n\n\n\n\nexport default order;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nclass Orders extends Component {\n    componentDidMount () {\n        this.props.onFetchOrders(this.props.token, this.props.userId);\n    }\n\n    render () {\n        let orders = <Spinner />;\n        if ( !this.props.loading ) {\n            orders = this.props.orders.map( order => (\n                <Order\n                    key={order.id}\n                    ingredients={order.ingredients}\n                    price={order.price} />\n            ) )\n        }\n        return (\n            <div>\n                {orders}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading,\n        token: state.auth.token,\n        userId: state.auth.userId\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: (token, userId) => dispatch( actions.fetchOrders(token, userId) )\n    };\n};\n\nexport default connect( mapStateToProps, mapDispatchToProps )( withErrorHandler( Orders, axios ) );","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport Input from '../../components/UI/Input/Input';\nimport Button from '../../components/UI/Button/Button';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nimport classes from './Auth.module.css';\nimport * as actions from '../../store/actions/index';\n\nclass Auth extends Component {\n\n    state = {\n        controls: {\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Mail Address'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            \n            },\n            password: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Password'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 6\n                },\n                valid: false,\n                touched: false\n            \n            }\n        },\n\n        isSignup: true\n    }\n\n    componentDidMount() {\n        if ((!this.props.buildingBurger) && (this.props.authRedirectPath !== '/') ) {\n            this.props.onSetAuthRedirectPath();\n        }\n    }\n\n    inputChangedHandler = (event, controlName) => {\n        const updatedControls = {\n            ...this.state.controls,\n            [controlName]: {\n                ...this.state.controls[controlName],\n                value: event.target.value,\n                valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\n                touched: true\n            }\n        };\n        this.setState({controls: updatedControls});\n\n\n    }\n\n\n    checkValidity(value, rules) {\n\n        let isValid = true;\n\n        if (!rules) {\n            return true;\n        }\n\n        if (rules.required) {\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if (rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid;\n        }\n\n        if (rules.maxLength) {\n            isValid = value.length <= rules.maxLength && isValid;\n        }\n\n        return isValid;\n    }\n\n\n    submitHandler = (event) => {\n        event.preventDefault();\n        this.props.onAuth(this.state.controls.email.value,\n            this.state.controls.password.value,\n            this.state.isSignup);\n    }\n\n    switchAuthModeHandler = () => {\n        this.setState(prevState => {\n            return {isSignup: !prevState.isSignup};\n        });\n    }\n\n    render () {\n        const formElementsArray = [];\n\n        for (let key in this.state.controls) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.controls[key]\n            });\n        }\n\n        let form = formElementsArray.map(formElement => (\n            <Input \n                key={formElement.id}\n                elementType={formElement.config.elementType} \n                    elementConfig={formElement.config.elementConfig}\n                    value={formElement.config.value}\n                    invalid={!formElement.config.valid}\n                    shouldValidate={formElement.config.validation}\n                    touched={formElement.config.touched}\n                    changed={(event) => this.inputChangedHandler(event, formElement.id)}\n                />\n\n        ) );\n\n        if (this.props.loading) {\n            form = <Spinner />;\n        }\n\n        let errorMessage = null;\n        if (this.props.error) {\n            errorMessage = (\n                <p>{this.props.error.message}</p>\n            );\n        }\n\n        let authRedirect = null;\n        if (this.props.isAuthenticated) {\n            authRedirect = <Redirect to={this.props.authRedirectPath} />\n        }\n\n        return (\n            <div className={classes.Auth}>\n                {authRedirect}\n                {errorMessage}\n                <form onSubmit={this.submitHandler}>\n                    {form}\n                    <Button btnType=\"Success\">SUBMIT</Button>\n                </form>\n                <Button \n                    clicked={this.switchAuthModeHandler}\n                    btnType=\"Danger\">\n                        SWITCH TO {this.state.isSignup ? 'SIGNIN' : 'SIGNUP'}\n                </Button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.auth.loading,\n        error: state.auth.error,\n        isAuthenticated: state.auth.token !== null,\n        buildingBurger: state.burgerBuilder.building,\n        authRedirectPath: state.auth.authRedirectPath\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (email, password, isSignup) => dispatch(actions.auth(email, password, isSignup)),\n        onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/'))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nimport * as actions from '../../../store/actions/index';\n\nclass Logout extends Component {\n\n    componentDidMount () {\n        this.props.onLogout();\n    }\n\n\n    render () {\n        return (\n            <Redirect to=\"/\" />\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLogout: () => dispatch(actions.logout())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Layout from './components/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\nimport Auth from './containers/Auth/Auth';\nimport Logout from './containers/Auth/Logout/Logout';\nimport * as actions from './store/actions/index';\n\nclass App extends Component {\n\n  componentDidMount () {\n    this.props.onTryAutoSignup();\n  }\n\n  render () {\n\n    let routes = (\n      <Switch>\n        <Route path=\"/auth\" component={Auth} />\n        <Route path=\"/\" exact component={BurgerBuilder} />\n        <Redirect to=\"/\" />\n      </Switch>\n      \n    );\n\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n            <Route path=\"/checkout\" component={Checkout} />\n            <Route path=\"/orders\" component={Orders} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/\" exact component={BurgerBuilder} />\n        </Switch>\n      );\n    }\n\n    return (\n      <div>\n        <Layout>\n          {routes}\n            \n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    };\n};","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: 4,\n    error: false\n};\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n};\n\nconst addIngredient = ( state, action ) => {\n    const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 }\n    const updatedIngredients = updateObject( state.ingredients, updatedIngredient );\n    const updatedState = {\n        ingredients: updatedIngredients,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        building: true\n    }\n    return updateObject( state, updatedState );\n};\n\nconst removeIngredient = (state, action) => {\n    const updatedIng = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 }\n    const updatedIngs = updateObject( state.ingredients, updatedIng );\n    const updatedSt = {\n        ingredients: updatedIngs,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        building: true\n    }\n    return updateObject( state, updatedSt );\n};\n\nconst setIngredients = (state, action) => {\n    return updateObject( state, {\n        ingredients: {\n            salad: action.ingredients.salad,\n            bacon: action.ingredients.bacon,\n            cheese: action.ingredients.cheese,\n            meat: action.ingredients.meat\n        },\n        totalPrice: 4,\n        error: false,\n        building: false\n    } );\n};\n\nconst fetchIngredientsFailed = (state, action) => {\n    return updateObject( state, { error: true } );\n};\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.ADD_INGREDIENT: return addIngredient( state, action );\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\n        case actionTypes.SET_INGREDIENTS: return setIngredients(state, action);    \n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action);\n        default: return state;\n    }\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false\n};\n\nconst purchaseInit = ( state, action ) => {\n    return updateObject( state, { purchased: false } );\n};\n\nconst purchaseBurgerStart = ( state, action ) => {\n    return updateObject( state, { loading: false } );\n};\n\nconst purchaseBurgerSuccess = ( state, action ) => {\n    const newOrder = updateObject( action.orderData, { id: action.orderId } );\n    return updateObject( state, {\n        loading: false,\n        purchased: true,\n        orders: state.orders.concat( newOrder )\n    } );\n};\n\nconst purchaseBurgerFail = ( state, action ) => {\n    return updateObject( state, { loading: false } );\n};\n\nconst fetchOrdersStart = ( state, action ) => {\n    return updateObject( state, { loading: true } );\n};\n\nconst fetchOrdersSuccess = ( state, action ) => {\n    return updateObject( state, {\n        orders: action.orders,\n        loading: false\n    } );\n};\n\nconst fetchOrdersFail = ( state, action ) => {\n    return updateObject( state, { loading: false } );\n};\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.PURCHASE_INIT: return purchaseInit( state, action );\n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart( state, action );\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess( state, action )\n        case actionTypes.PURCHASE_BURGER_FAIL: return purchaseBurgerFail( state, action );\n        case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart( state, action );\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess( state, action );\n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrdersFail( state, action );\n        default: return state;\n    }\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    token: null,\n    userId: null,\n    error: null,\n    loading: false,\n    authRedirectPath: '/'\n};\n\nconst authStart = ( state, action ) => {\n    return updateObject( state, { error: null, loading: true } );\n};\n\nconst authSuccess = (state, action) => {\n    return updateObject( state, { \n        token: action.idToken,\n        userId: action.userId,\n        error: null,\n        loading: false\n     } );\n};\n\nconst authFail = (state, action) => {\n    return updateObject( state, {\n        error: action.error,\n        loading: false\n    });\n};\n\nconst authLogout = (state, action) => {\n    return updateObject(state, { token: null, userId: null });\n};\n\nconst setAuthRedirectPath = (state, action) => {\n    \n    return updateObject(state, {\n        authRedirectPath: action.path\n    });\n};\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state, action);\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer,\n    auth: authReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render( app, document.getElementById( 'root' ) );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}